% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/declare_assignment.R
\name{declare_assignment}
\alias{declare_assignment}
\title{Declare Assignment Procedure}
\usage{
declare_assignment(..., assignment_function = assignment_function_default)
}
\arguments{
\item{...}{Arguments to the assignment function}

\item{assignment_function}{A function that takes a data.frame, adds an assignment variable and optionally assignment probabilities or other relevant quantities, and returns a data.frame. By default, the assignment_function uses the \code{randomizr} functions \code{\link{conduct_ra}} and \code{\link{obtain_condition_probabilities}} to conduct random assignment and obtain the probabilities of assignment to each condition.}
}
\value{
data.frame
}
\description{
Declare Assignment Procedure
}
\examples{

my_population <- declare_population(N = 100)
df <- my_population()

# Complete random assignment using randomizr
# use any arguments you would use in conduct_ra.

my_assignment <- declare_assignment(m = 50)
df <- my_assignment(pop)
head(df)
table(df$Z)

# Custom random assignment functions

df <- my_population()

my_assignment_function <- function(data) {
   data$Z <- rbinom(n = nrow(data),
   size = 1,
   prob = 0.5)
   data
   }

my_assignment_custom <- declare_assignment(
   assignment_function = my_assignment_function)

df <- my_custom_assignment(pop)
head(df)
table(df$Z)
}
