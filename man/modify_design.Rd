% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/modify_design.R
\name{modify_design}
\alias{modify_design}
\alias{insert_step}
\alias{delete_step}
\alias{replace_step}
\title{Modify a design after the fact}
\usage{
insert_step(design, new_step, before = NULL, after = NULL)

delete_step(design, step)

replace_step(design, step, new_step)
}
\arguments{
\item{design}{a design object, usually created by \code{\link{declare_design}}, \code{\link{quick_design}}, or \code{\link{download_design}}.}

\item{new_step}{the new step - either a function or a partial call}

\item{before}{the step before which to add steps}

\item{after}{same}

\item{step}{the step to be deleted or replaced}
}
\value{
A new design object. See \code{\link{declare_design}} for details.
}
\description{
Insert, delete and replace steps in an (already declared) design object.
}
\details{
see \code{\link{modify_design}} for details.
}
\examples{

 my_population <- declare_population(N = 100, noise = rnorm(N))

 my_potential_outcomes <-
   declare_potential_outcomes(Y_Z_0 = noise,
                              Y_Z_1 = noise + rnorm(N, mean = 2, sd = 2))

 my_assignment <- declare_assignment(m = 50)
 my_assignment_2 <- declare_assignment(m = 25)

 design <- declare_design(my_population,
                          my_potential_outcomes,
                          my_assignment)

 design


 insert_step(design, dplyr::mutate(income = noise^2), after = my_assignment)
 insert_step(design, dplyr::mutate(income = noise^2), before = my_assignment)


 delete_step(design, my_assignment)
 replace_step(design, my_assignment, dplyr::mutate(words="HIARYLAH"))
}
