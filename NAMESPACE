# Generated by roxygen2: do not edit by hand

S3method("+",dd)
S3method(print,compared_diagnoses)
S3method(print,design)
S3method(print,design_comparison)
S3method(print,design_step)
S3method(print,diagnosis)
S3method(print,summary.compared_diagnoses)
S3method(print,summary.design)
S3method(str,design_step)
S3method(summary,compared_diagnoses)
S3method(summary,design)
S3method(summary,diagnosis)
S3method(tidy,diagnosis)
export(cite_design)
export(compare_design_code)
export(compare_design_data)
export(compare_design_estimates)
export(compare_design_inquiries)
export(compare_design_summaries)
export(compare_designs)
export(compare_diagnoses)
export(declare_assignment)
export(declare_diagnosands)
export(declare_estimand)
export(declare_estimands)
export(declare_estimator)
export(declare_estimators)
export(declare_inquiries)
export(declare_inquiry)
export(declare_measurement)
export(declare_model)
export(declare_population)
export(declare_potential_outcomes)
export(declare_reveal)
export(declare_sampling)
export(declare_step)
export(declare_test)
export(delete_step)
export(diagnose_design)
export(diagnose_designs)
export(draw_assignment)
export(draw_data)
export(draw_estimand)
export(draw_estimands)
export(draw_estimates)
export(draw_sample)
export(expand_design)
export(get_diagnosands)
export(get_estimates)
export(get_simulations)
export(insert_step)
export(label_estimator)
export(label_test)
export(print_code)
export(redesign)
export(replace_step)
export(reshape_diagnosis)
export(run_design)
export(set_citation)
export(set_diagnosands)
export(simulate_design)
export(simulate_designs)
export(tidy)
export(tidy_estimator)
export(tidy_try)
export(vars)
importFrom(estimatr,difference_in_means)
importFrom(fabricatr,add_level)
importFrom(fabricatr,fabricate)
importFrom(fabricatr,modify_level)
importFrom(generics,tidy)
importFrom(methods,extends)
importFrom(randomizr,conduct_ra)
importFrom(randomizr,declare_ra)
importFrom(randomizr,declare_rs)
importFrom(randomizr,draw_rs)
importFrom(randomizr,obtain_condition_probabilities)
importFrom(randomizr,obtain_inclusion_probabilities)
importFrom(rlang,"!!!")
importFrom(rlang,"!!")
importFrom(rlang,"%||%")
importFrom(rlang,":=")
importFrom(rlang,as_data_mask)
importFrom(rlang,as_function)
importFrom(rlang,as_label)
importFrom(rlang,as_list)
importFrom(rlang,as_quosure)
importFrom(rlang,call_args)
importFrom(rlang,call_modify)
importFrom(rlang,call_name)
importFrom(rlang,enexpr)
importFrom(rlang,enquo)
importFrom(rlang,enquos)
importFrom(rlang,env_clone)
importFrom(rlang,eval_bare)
importFrom(rlang,eval_tidy)
importFrom(rlang,expr)
importFrom(rlang,expr_deparse)
importFrom(rlang,expr_interp)
importFrom(rlang,expr_name)
importFrom(rlang,expr_text)
importFrom(rlang,f_env)
importFrom(rlang,f_rhs)
importFrom(rlang,f_text)
importFrom(rlang,get_expr)
importFrom(rlang,is_bare_integerish)
importFrom(rlang,is_call)
importFrom(rlang,is_character)
importFrom(rlang,is_empty)
importFrom(rlang,is_formula)
importFrom(rlang,is_function)
importFrom(rlang,is_list)
importFrom(rlang,is_missing)
importFrom(rlang,is_null)
importFrom(rlang,is_quosure)
importFrom(rlang,is_scalar_character)
importFrom(rlang,is_symbol)
importFrom(rlang,quo)
importFrom(rlang,quo_expr)
importFrom(rlang,quo_get_expr)
importFrom(rlang,quo_is_call)
importFrom(rlang,quo_is_missing)
importFrom(rlang,quo_squash)
importFrom(rlang,quo_text)
importFrom(rlang,quos)
importFrom(stats,aggregate)
importFrom(stats,anova)
importFrom(stats,aov)
importFrom(stats,as.formula)
importFrom(stats,coef)
importFrom(stats,confint)
importFrom(stats,df.residual)
importFrom(stats,glm)
importFrom(stats,lm)
importFrom(stats,median)
importFrom(stats,na.omit)
importFrom(stats,pt)
importFrom(stats,qt)
importFrom(stats,quantile)
importFrom(stats,rbinom)
importFrom(stats,rmultinom)
importFrom(stats,rnorm)
importFrom(stats,sd)
importFrom(stats,setNames)
importFrom(stats,update.formula)
importFrom(stats,var)
importFrom(stats,vcov)
importFrom(utils,bibentry)
importFrom(utils,capture.output)
importFrom(utils,compareVersion)
importFrom(utils,data)
importFrom(utils,getS3method)
importFrom(utils,hasName)
importFrom(utils,head)
importFrom(utils,type.convert)
